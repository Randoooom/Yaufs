apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
  annotations:
    sidecar.jaegertracing.io/inject: "true"
    {{- range $key, $value := $.Values.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
      annotations:
        {{- range $key, $value := $.Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{ if .Values.oidc.hostAlias.enabled }}
      hostAliases:
        - ip: {{ .Values.oidc.hostAlias.ip }}
          hostnames:
            - {{ .Values.oidc.hostAlias.hostname }}
      {{- end  }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - image: {{ .Values.image }}
          name: control-plane
          env:
            - name: RUST_LOG
              value: {{ .Values.logLevel }}
            - name: SKYTABLE_PORT
              value: "2003"
            - name: SKYTABLE_HOST
              value: "skytable.control-plane.svc.cluster.local"
            - name: SKYTABLE_ORIGIN_KEY
              valueFrom:
                secretKeyRef:
                  name: skytable
                  key: origin-key
            - name: OIDC_ISSUER
              value: {{ .Values.oidc.issuer }}
            - name: OIDC_SERVICE_ACCOUNT_KEY_PATH
              value: /mnt/oidc/{{ .Values.oidc.serviceAccountKeyKey }}
            - name: OIDC_APPLICATION_KEY_PATH
              value: /mnt/oidc/{{ .Values.oidc.applicationKeyKey }}
            - name: OIDC_PROJECT_ID
              value: "{{ .Values.oidc.projectId }}"
            - name: FLUVIO_ENDPOINT
              value: fluvio-sc-public.fluvio.svc.cluster.local:9003
            - name: FLUVIO_TLS_DOMAIN
              value: fluvio.local
            - name: FLUVIO_TLS_KEY_PATH
              value: /mnt/fluvio/tls.key
            - name: FLUVIO_TLS_CRT_PATH
              value: /mnt/fluvio/tls.crt
            - name: FLUVIO_TLS_CA_PATH
              value: /mnt/fluvio/ca.crt
            - name: TEMPLATE_SERVICE_ENDPOINT
              value: http://yaufs-template-service.template-service.svc.cluster.local:8000
          volumeMounts:
            - name: oidc-credentials
              mountPath: "/mnt/oidc"
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
            - name: custom-ca
              mountPath: /etc/ssl
            - name: fluvio-tls
              mountPath: /mnt/fluvio
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: grpc
            - containerPort: 8001
              name: health
          livenessProbe:
            grpc:
              port: 8001
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            grpc:
              port: 8001
            initialDelaySeconds: 5
            periodSeconds: 5
      initContainers:
        - name: prepare-ca
          image: debian:stable
          command: ['sh', '-c', 'apt update; apt install ca-certificates -y; update-ca-certificates; cp -R /etc/ssl/* /var/lib/data/ssl']
          volumeMounts:
            - name: custom-ca
              mountPath: /var/lib/data/ssl
            - name: vault-ca
              mountPath: /usr/local/share/ca-certificates/
        - name: init-surrealdb
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup skytable.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for skytable; sleep 2; done; sleep 30" ]
      volumes:
        - name: oidc-credentials
          secret:
            secretName: {{ .Values.oidc.secret }}
        - name: vault-ca
          secret:
            secretName: {{ .Values.oidc.caSecret }}
        - name: custom-ca
          emptyDir: {}
        - name: fluvio-tls
          secret:
            secretName: {{ .Values.fluvio.tlsSecret }}
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "vault-control-plane"
